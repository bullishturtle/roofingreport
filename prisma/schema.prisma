// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // Don't use previewFeatures unless absolutely necessary
  // previewFeatures = []
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  auditLogs AuditLog[]

  @@map("users")
}

model AuditLog {
  id         String   @id @default(cuid())
  timestamp  DateTime @default(now())
  userId     String?
  action     String
  entityType String
  entityId   String?
  details    Json     @default("{}")
  ipAddress  String?
  userAgent  String?
  status     String   @default("success")

  // Relations
  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)

  // Indexes for better query performance
  @@index([timestamp])
  @@index([userId])
  @@index([action])
  @@index([entityType])
  @@index([status])

  @@map("audit_logs")
}

model Property {
  id          String   @id @default(cuid())
  address     String
  city        String
  state       String
  zipCode     String
  latitude    Float?
  longitude   Float?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  reports Report[]

  @@map("properties")
}

model Report {
  id         String   @id @default(cuid())
  propertyId String
  reportType String
  status     String   @default("pending")
  data       Json     @default("{}")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  property Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)

  @@map("reports")
}
