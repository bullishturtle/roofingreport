// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  reports       Report[]
  company       Company?  @relation(fields: [companyId], references: [id])
  companyId     String?
  teams         Team[]    @relation("TeamMembers")
  ownedTeams    Team[]    @relation("TeamOwner")
}

enum UserRole {
  USER
  ADMIN
  SUPER_ADMIN
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Company {
  id          String   @id @default(cuid())
  name        String
  logo        String?
  website     String?
  address     String?
  city        String?
  state       String?
  zipCode     String?
  phone       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
  teams       Team[]
  reports     Report[]
  proposals   Proposal[]
}

model Team {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  company     Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId   String
  owner       User     @relation("TeamOwner", fields: [ownerId], references: [id])
  ownerId     String
  members     User[]   @relation("TeamMembers")
  reports     Report[]
}

model Report {
  id              String            @id @default(cuid())
  address         String
  city            String?
  state           String?
  zipCode         String?
  latitude        Float?
  longitude       Float?
  propertyType    PropertyType      @default(RESIDENTIAL)
  roofType        RoofType          @default(ASPHALT_SHINGLE)
  roofArea        Float?
  roofPitch       String?
  roofAge         Int?
  condition       RoofCondition     @default(FAIR)
  images          ReportImage[]
  measurements    Json?
  weatherHistory  Json?
  stormData       Json?
  recommendations String?
  notes           String?
  status          ReportStatus      @default(DRAFT)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  user            User              @relation(fields: [userId], references: [id])
  userId          String
  company         Company?          @relation(fields: [companyId], references: [id])
  companyId       String?
  team            Team?             @relation(fields: [teamId], references: [id])
  teamId          String?
  proposals       Proposal[]
}

model ReportImage {
  id        String   @id @default(cuid())
  url       String
  type      String   @default("general")
  caption   String?
  createdAt DateTime @default(now())
  report    Report   @relation(fields: [reportId], references: [id], onDelete: Cascade)
  reportId  String
}

enum PropertyType {
  RESIDENTIAL
  COMMERCIAL
  INDUSTRIAL
  MULTI_FAMILY
}

enum RoofType {
  ASPHALT_SHINGLE
  METAL
  TILE
  SLATE
  WOOD_SHAKE
  FLAT
  TPO
  EPDM
  OTHER
}

enum RoofCondition {
  EXCELLENT
  GOOD
  FAIR
  POOR
  CRITICAL
}

enum ReportStatus {
  DRAFT
  COMPLETED
  ARCHIVED
}

model Proposal {
  id          String        @id @default(cuid())
  title       String
  description String?
  materials   Json?
  labor       Json?
  equipment   Json?
  totalCost   Float
  status      ProposalStatus @default(DRAFT)
  validUntil  DateTime?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  report      Report        @relation(fields: [reportId], references: [id])
  reportId    String
  company     Company       @relation(fields: [companyId], references: [id])
  companyId   String
}

enum ProposalStatus {
  DRAFT
  SENT
  ACCEPTED
  REJECTED
  EXPIRED
}
